// <auto-generated />
using FiapTechChallenge.API.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiapTechChallenge.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231201213608_primeira-migration")]
    partial class primeiramigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiapTechChallenge.API.Entity.ClasseInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("ClasseInvestimento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Renda Fixa"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Renda Variável"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Fundos de Investimento"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Previdência Privada"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "COE (Certificado de Operações Estruturadas)"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Operações no Mercado Internacional"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Câmbio"
                        });
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.Investimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClasseInvestimentoId")
                        .HasColumnType("INT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("IdClasseInvestimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseInvestimentoId");

                    b.ToTable("Investimento", (string)null);
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.Investimento", b =>
                {
                    b.HasOne("FiapTechChallenge.API.Entity.ClasseInvestimento", "ClasseInvestimento")
                        .WithMany("Investimentos")
                        .HasForeignKey("ClasseInvestimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClasseInvestimento");
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.ClasseInvestimento", b =>
                {
                    b.Navigation("Investimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
