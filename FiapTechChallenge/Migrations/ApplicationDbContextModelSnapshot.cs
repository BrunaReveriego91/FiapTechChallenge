// <auto-generated />
using FiapTechChallenge.API.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiapTechChallenge.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiapTechChallenge.API.Entity.ClasseInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("ClasseInvestimento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Renda Fixa"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Renda Variável"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Fundos de Investimento"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Previdência Privada"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "COE (Certificado de Operações Estruturadas)"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Operações no Mercado Internacional"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Câmbio"
                        });
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.Investimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("IdClasseInvestimento")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdClasseInvestimento");

                    b.ToTable("Investimento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Tesouro Direto",
                            IdClasseInvestimento = 1
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "CDB (Certificado de Depósito Bancário)",
                            IdClasseInvestimento = 1
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "LCI (Letra de Crédito Imobiliário)",
                            IdClasseInvestimento = 1
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "LCA (Letra de Crédito do Agronegócio)",
                            IdClasseInvestimento = 1
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Debêntures",
                            IdClasseInvestimento = 1
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Ações",
                            IdClasseInvestimento = 2
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Opções",
                            IdClasseInvestimento = 2
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "ETFs (Exchange Traded Funds)",
                            IdClasseInvestimento = 2
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "Fundos de Investimento em Ações",
                            IdClasseInvestimento = 2
                        },
                        new
                        {
                            Id = 10,
                            Descricao = "Fundos de Renda Fixa",
                            IdClasseInvestimento = 3
                        },
                        new
                        {
                            Id = 11,
                            Descricao = "Fundos Multimercado",
                            IdClasseInvestimento = 3
                        },
                        new
                        {
                            Id = 12,
                            Descricao = "Fundos de Ações",
                            IdClasseInvestimento = 3
                        },
                        new
                        {
                            Id = 13,
                            Descricao = "Fundos Imobiliários",
                            IdClasseInvestimento = 3
                        },
                        new
                        {
                            Id = 14,
                            Descricao = "PGBL (Plano Gerador de Benefício Livre)",
                            IdClasseInvestimento = 4
                        },
                        new
                        {
                            Id = 15,
                            Descricao = "VGBL (Vida Gerador de Benefício Livre)",
                            IdClasseInvestimento = 4
                        },
                        new
                        {
                            Id = 16,
                            Descricao = "COE (Certificado de Operações Estruturadas)",
                            IdClasseInvestimento = 5
                        },
                        new
                        {
                            Id = 17,
                            Descricao = "Investimentos em ativos estrangeiros",
                            IdClasseInvestimento = 6
                        },
                        new
                        {
                            Id = 18,
                            Descricao = "Operações com moedas estrangeiras",
                            IdClasseInvestimento = 7
                        });
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.Ordem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoOrdem")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Ordem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantidade = 99,
                            TipoOrdem = "A Mercado"
                        },
                        new
                        {
                            Id = 2,
                            Quantidade = 49,
                            TipoOrdem = "StartStop"
                        });
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Login")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Senha")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            Login = "admin",
                            Nome = "admin",
                            Senha = "admin@123"
                        });
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.Investimento", b =>
                {
                    b.HasOne("FiapTechChallenge.API.Entity.ClasseInvestimento", "ClasseInvestimento")
                        .WithMany("Investimentos")
                        .HasForeignKey("IdClasseInvestimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClasseInvestimento");
                });

            modelBuilder.Entity("FiapTechChallenge.API.Entity.ClasseInvestimento", b =>
                {
                    b.Navigation("Investimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
